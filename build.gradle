/*
 * Copyright 2014 Cyrus Innovation, LLC. Licensed under Apache license 2.0.
 */
apply plugin: 'scala'

version = projectVersion       // See gradle.properties
group = artifactGroup

dependencies {
  compile "org.scala-lang:scala-library:$scalaVersion"
}

allprojects {
    apply plugin: 'idea'    // Needed in here to handle multi-module IDEA projects

    repositories {
		mavenLocal()
		mavenCentral()
		maven {
			name = 'sonatype-releases'
			url = "https://oss.sonatype.org/content/repositories/releases"
		}
    }

	tasks.withType(ScalaCompile) {
		scalaCompileOptions.fork = true
		scalaCompileOptions.useAnt = false
		scalaCompileOptions.deprecation = true
		scalaCompileOptions.unchecked = true

		configure(scalaCompileOptions.forkOptions) {
		  memoryMaximumSize = '1g'
		  jvmArgs = ['-XX:MaxPermSize=512m']
		}
	}
}

subprojects {
    apply plugin: 'scala'
    apply plugin: 'maven-publish'

    version = projectVersion
    group = artifactGroup

    publishToMavenLocal.dependsOn test

    test {
      jvmArgs '-XX:MaxPermSize=512m'
      systemProperties = System.getProperties()
    }

    def manifestAttributes = [
      'Implementation-Version': version,
      'Implementation-Vendor': artifactGroup
    ]

    jar {
      manifest {
        attributes( manifestAttributes )
      }
    }

    task sourceJar(type: Jar) {
      from sourceSets.main.allScala
    }

    scaladoc.destinationDir = file("$projectDir/doc")

    task scaladocJar(type: Jar, dependsOn: scaladoc) {
      from scaladoc.destinationDir
    }

    publishing {
      publications {
        mavenCustom(MavenPublication) {
          artifact sourceJar {
            manifest {
              attributes( manifestAttributes )
            }
            classifier 'sources'
          }
          artifact scaladocJar {
            manifest {
              attributes( manifestAttributes )
            }
            classifier 'javadoc'
          }
        }
      }
    }
}

