"NodeId","Library"," Version","AttributeName"," AttributeValue "
1,"test","1.0","label","library"
1,"test","1.0","name","test"
2,"test","1.0","label","version"
2,"test","1.0","versionNumber","1.0"
2,"test","1.0","state","Editable"
2,"test","1.0","lastEditDate","2014-04-07T09:30:10Z"
3,"test","1.0","label","computations"
4,"test","1.0","label","simpleComputation"
4,"test","1.0","package","test.computations"
4,"test","1.0","name","MaximumTestValueComputation"
4,"test","1.0","changedInVersion","1.0"
4,"test","1.0","description","Take the maximum of the values of the testValues map"
4,"test","1.0","shouldPropagateExceptions","false"
4,"test","1.0","securityConfiguration","testSecurityConfiguration"
4,"test","1.0","logger","computationLogger"
4,"test","1.0","resultKey","maxTestValue"
4,"test","1.0","computationExpression","val toTestImports = MutableSet()
 val maxTuple = testValues.maxBy(aTuple => aTuple._2)
 Some(MutableMap(maxTuple))"
6,"test","1.0","label","imports"
7,"test","1.0","label","import"
7,"test","1.0","text","scala.collection.mutable.{Map => MutableMap}"
8,"test","1.0","label","import"
8,"test","1.0","text","scala.collection.mutable.{Set => MutableSet}"
9,"test","1.0","label","inputs"
10,"test","1.0","label","mapping"
10,"test","1.0","key","testValues: Map[String, Int]"
10,"test","1.0","value","testValues"
16,"test","1.0","label","abortIfComputation"
16,"test","1.0","package","test.computations"
16,"test","1.0","name","AbortIfContainsMapWithDesiredEntry"
16,"test","1.0","changedInVersion","1.0"
16,"test","1.0","description","See if the value is a map with one key 'b and value 5"
16,"test","1.0","shouldPropagateExceptions","false"
16,"test","1.0","securityConfiguration","testSecurityConfiguration"
16,"test","1.0","logger","computationLogger"
17,"test","1.0","label","predicateExpression"
17,"test","1.0","text","x == MutableMap('b -> 5)"
18,"test","1.0","label","innerComputation"
19,"test","1.0","label","ref"
19,"test","1.0","text","test.computations.MaximumTestValueComputation"
20,"test","1.0","label","imports"
21,"test","1.0","label","import"
21,"test","1.0","text","scala.collection.mutable.{Map => MutableMap}"
22,"test","1.0","label","inputs"
23,"test","1.0","label","mapping"
23,"test","1.0","key","x: MutableMap[Symbol, Int]"
23,"test","1.0","value","maxTestValue"
28,"test","1.0","label","namedComputation"
28,"test","1.0","package","test.computations"
28,"test","1.0","name","SequentialMaxComputation"
28,"test","1.0","changedInVersion","1.0"
28,"test","1.0","description","Compute the maximum and then do a mapping computation"
29,"test","1.0","label","sequentialComputation"
30,"test","1.0","label","innerComputations"
31,"test","1.0","label","innerComputation"
32,"test","1.0","label","ref"
32,"test","1.0","text","test.computations.MaximumTestValueComputation"
33,"test","1.0","label","innerComputation"
34,"test","1.0","label","mappingComputation"
34,"test","1.0","resultKey","maxTestValue"
35,"test","1.0","label","innerComputation"
36,"test","1.0","label","ref"
36,"test","1.0","text","test.computations.AbortIfContainsMapWithDesiredEntry"
37,"test","1.0","label","inputTuple"
38,"test","1.0","label","mapping"
38,"test","1.0","key","testValues: Map[String, Int]"
38,"test","1.0","value","testValues"
42,"test","1.0","label","namedComputation"
42,"test","1.0","package","test.computations"
42,"test","1.0","name","FoldingSumComputation"
42,"test","1.0","changedInVersion","1.0"
42,"test","1.0","description","Sum all the values in a sequence"
43,"test","1.0","label","foldingComputation"
44,"test","1.0","label","initialAccumulatorKey"
44,"test","1.0","text","initialAccumulator"
45,"test","1.0","label","inputTuple"
46,"test","1.0","label","mapping"
46,"test","1.0","key","testValues"
46,"test","1.0","value","addend1"
49,"test","1.0","label","accumulatorTuple"
50,"test","1.0","label","mapping"
50,"test","1.0","key","sumAccumulator"
50,"test","1.0","value","addend2"
53,"test","1.0","label","innerComputation"
54,"test","1.0","label","simpleComputation"
54,"test","1.0","package","test.computations"
54,"test","1.0","name","SumComputation"
54,"test","1.0","changedInVersion","1.0"
54,"test","1.0","description","Take the sum of two addends"
54,"test","1.0","shouldPropagateExceptions","false"
54,"test","1.0","securityConfiguration","testSecurityConfiguration"
54,"test","1.0","logger","computationLogger"
54,"test","1.0","resultKey","sum"
54,"test","1.0","computationExpression","Some(addend1 + addend2)"
56,"test","1.0","label","imports"
57,"test","1.0","label","inputs"
58,"test","1.0","label","mapping"
58,"test","1.0","key","addend1:Int"
58,"test","1.0","value","addend1"
61,"test","1.0","label","mapping"
61,"test","1.0","key","addend2:Int"
61,"test","1.0","value","addend2"